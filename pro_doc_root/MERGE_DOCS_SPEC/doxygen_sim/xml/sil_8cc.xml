<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="sil_8cc" kind="file">
    <compoundname>sil.cc</compoundname>
    <includes refid="sil_8hh" local="yes">sil.hh</includes>
    <includes refid="constants_8hh" local="yes">constants.hh</includes>
    <includes refid="ps3control_8hh" local="yes">ps3control.hh</includes>
    <includes local="yes">sensor_fusion.h</includes>
    <includes local="yes">pid.h</includes>
    <includes local="yes">mixer.h</includes>
    <includes local="yes">math.h</includes>
    <includes local="yes">mainvars.h</includes>
    <incdepgraph>
      <node id="141">
        <label>mainvars.h</label>
      </node>
      <node id="138">
        <label>pid.h</label>
      </node>
      <node id="127">
        <label>../dependencies/resources.hh</label>
        <link refid="resources_8hh_source"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>constants.hh</label>
        <link refid="constants_8hh_source"/>
      </node>
      <node id="128">
        <label>string</label>
      </node>
      <node id="131">
        <label>gazebo/msgs/msgs.hh</label>
      </node>
      <node id="132">
        <label>gazebo/math/Vector3.hh</label>
      </node>
      <node id="129">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="126">
        <label>sil.hh</label>
        <link refid="sil_8hh_source"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>/home/usappz/DeadalusSim/source/sil/sil.cc</label>
        <link refid="sil.cc"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>../joystick/joystick.hh</label>
        <link refid="joystick_8hh_source"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>mixer.h</label>
      </node>
      <node id="140">
        <label>math.h</label>
      </node>
      <node id="136">
        <label>ps3control.hh</label>
        <link refid="ps3control_8hh_source"/>
      </node>
      <node id="130">
        <label>gazebo/physics/physics.hh</label>
      </node>
      <node id="133">
        <label>stdio.h</label>
      </node>
      <node id="137">
        <label>sensor_fusion.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>____<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_____<sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>/<sp/>___|<sp/><sp/>__<sp/>_<sp/>_<sp/>__<sp/><sp/>_<sp/>__|__<sp/><sp/>/<sp/><sp/>__|<sp/>|<sp/>___</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>\___<sp/>\<sp/>/<sp/>_`<sp/>|<sp/>&apos;_<sp/>\|<sp/>&apos;_<sp/>\<sp/>/<sp/>/<sp/><sp/>/<sp/>_`<sp/>|/<sp/>_<sp/>\</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>___)<sp/>|<sp/>(_|<sp/>|<sp/>|_)<sp/>|<sp/>|_)<sp/>/<sp/>/_<sp/>|<sp/>(_|<sp/>|<sp/><sp/>__/</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>|____/<sp/>\__,_|<sp/>.__/|<sp/>.__/____(_)__,_|\___|</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|_|<sp/><sp/><sp/>|_|</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Andreas<sp/>Gschossmann</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Email:<sp/><sp/>andreas.gschossmann@hs-regensburg.de</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>sil.cc<sp/>-<sp/>This<sp/>class<sp/>contains<sp/>the<sp/>software<sp/>algorithms<sp/>which<sp/>control</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>quadrocopter<sp/>and<sp/>should<sp/>be<sp/>tested.<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sil.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;constants.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ps3control.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;sensor_fusion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;pid.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;mixer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;mainvars.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//using<sp/>namespace<sp/>std;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="classSIL_1a0e195277d2e26a6ce681b1d84dbe72a6" kindref="member" tooltip="The SIL class contains everything, that is needed to simulate the firmware of the quadrocopter...">SIL::SIL</ref>()<sp/>:<sp/>_test_sequence_iterator(0),<sp/>_ps3controller(</highlight><highlight class="stringliteral">&quot;/dev/input/js0&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Joystick<sp/>Aufruf<sp/>parametriserbar<sp/>machen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classSIL_1aa9c8c439c3fa725fe59f2245c274a369" kindref="member" tooltip="Destructor.">SIL::~SIL</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="classAngularVel" kindref="compound" tooltip="Container Class for Angular velocities of four motors.">AngularVel</ref><sp/><ref refid="classSIL_1a15370199edeb534b96ac2fb7fc97362a" kindref="member" tooltip="Returns the current rotor speed.">SIL::get_rotor_speed</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSIL_1a807e18b347926da1b8bfd375b31b4397" kindref="member" tooltip="Current rotor speed.">_rotor_speed</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="classActuationVal" kindref="compound" tooltip="Container class for actuation values of four motors.">ActuationVal</ref><sp/><ref refid="classSIL_1ad61155d21c843c82a40e7a0143ba15a7" kindref="member" tooltip="Returns the current actuation value.">SIL::get_actuation_value</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSIL_1acf01cad2432f30fa1bf3566c11400119" kindref="member" tooltip="Current actuation value.">_actuation_value</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSIL_1ab1f50cad8ee00ead398a145974827b29" kindref="member" tooltip="Obtains the current state of the playstation 3 controller.">SIL::get_ps3controller</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Todo:<sp/>Alles<sp/>nur<sp/>dann<sp/>ausführen,<sp/>wenn<sp/>Controller<sp/>gefunden<sp/>wurde</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>if<sp/>(!_ps3controller.isFound())</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;open<sp/>failed.\n&quot;);</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>sample<sp/>an<sp/>event<sp/>from<sp/>the<sp/>joystick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classJoystickEvent" kindref="compound" tooltip="Encapsulates all data relevant to a sampled joystick event.">JoystickEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSIL_1a9c92d49ff4644b8bb71f69cc55961a8a" kindref="member" tooltip="Instance of Joystick class to obtain data of playstion 3 controller.">_ps3controller</ref>.<ref refid="classJoystick_1a13d48d8d9a32a788394f69472b6b3d9d" kindref="member" tooltip="Attempts to populate the provided JoystickEvent instance with data from the joystick. Returns true if data is available, otherwise false.">sample</ref>(&amp;event))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="classJoystickEvent_1aae34d965daafe3e45a0bbfd733866386" kindref="member" tooltip="Returns true if this event is the result of a button press.">isButton</ref>())</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(event.number<sp/>==<sp/>9)</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaw_ctrl<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Button<sp/>%u<sp/>is<sp/>%s\n&quot;,</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event.number,</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event.value<sp/>==<sp/>0<sp/>?<sp/>&quot;up&quot;<sp/>:<sp/>&quot;down&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="classJoystickEvent_1a0b82c33e3a562798595138bcffe02d6a" kindref="member" tooltip="Returns true if this event is the result of an axis movement.">isAxis</ref>())</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="classJoystickEvent_1a786468a9d3ad11577fdbd64292d8bc06" kindref="member" tooltip="The axis/button number.">number</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Axis<sp/>%u<sp/>is<sp/>at<sp/>position<sp/>%d\n&quot;,<sp/>event.number,<sp/>event.value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gas_ctrl<sp/>=<sp/>(-</highlight><highlight class="keyword">event</highlight><highlight class="normal">.value)<sp/>*<sp/>PS3_GAIN_GAS;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="classJoystickEvent_1a786468a9d3ad11577fdbd64292d8bc06" kindref="member" tooltip="The axis/button number.">number</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch_ctrl<sp/>=<sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">.value)<sp/>*<sp/>PS3_GAIN_PITCH;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="classJoystickEvent_1a786468a9d3ad11577fdbd64292d8bc06" kindref="member" tooltip="The axis/button number.">number</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roll_ctrl<sp/>=<sp/>(-</highlight><highlight class="keyword">event</highlight><highlight class="normal">.value)<sp/>*<sp/>PS3_GAIN_ROLL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="classJoystickEvent_1a786468a9d3ad11577fdbd64292d8bc06" kindref="member" tooltip="The axis/button number.">number</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>läuft<sp/>noch<sp/>unstabil<sp/>und<sp/>wird<sp/>deshalb<sp/>vorerst<sp/>nicht<sp/>unterstützt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaw_ctrl<sp/>=<sp/>0.0;</highlight><highlight class="comment">//(event.value)<sp/>*<sp/>PS3_GAIN_YAW;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(event.number<sp/>==<sp/>0<sp/>||<sp/>event.number<sp/>==<sp/>1<sp/>||<sp/>event.number<sp/>==<sp/>2<sp/>||<sp/>event.number<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//printf(&quot;Axis<sp/>%u<sp/>is<sp/>at<sp/>position<sp/>%d\n&quot;,<sp/>event.number,<sp/>event.value);</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gas<sp/>=<sp/>event.value/3000;</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSIL_1a8260a0d9fcac749ac23fe0f945f60af9" kindref="member" tooltip="Obtains keyboard inputs (not supported yet)">SIL::get_key</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Noch<sp/>keinen<sp/>Schimmer<sp/>wie<sp/>das<sp/>gehen<sp/>soll,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vlt.<sp/>über<sp/>qt?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSIL_1ad2aea8d97e12b77f5438d40b91514336" kindref="member" tooltip="This function contains a sequence of test stimuli. It is intended to be called in update(double...">SIL::test_sequence</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="classSIL_1a19b0b595318ed350fad37b9945489588" kindref="member" tooltip="Iterator for the test_sequence function.">_test_sequence_iterator</ref>++;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>sequence&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>hier<sp/>nur<sp/>noch<sp/>actuation<sp/>values<sp/>setzen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>if<sp/>(_test_sequence_iterator<sp/>&lt;<sp/>5000)</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[RIGHT]<sp/>=<sp/>0xA6;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[LEFT]<sp/>=<sp/>0xA6;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[FRONT]<sp/>=<sp/>0xA6;</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[REAR]<sp/>=<sp/>0xA6;</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>else<sp/>if<sp/>(_test_sequence_iterator<sp/>&lt;<sp/>10000)</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[REAR]<sp/>=<sp/>294.99999999999998;</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[FRONT]<sp/>=<sp/>-150;</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[LEFT]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>_actuation_value.motor[RIGHT]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSIL_1ae46ca96d637be59877af11d0ec661bb0" kindref="member" tooltip="This function is intended to be called when the simulation is loaded. It should contain all test code...">SIL::init</ref>()</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ab<sp/>hier<sp/>C-Funktionen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vor<sp/>der<sp/>main<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>pidInit(&amp;my_PID_roll,<sp/>0,<sp/>PID_ROLL_KP,<sp/>PID_ROLL_KI,<sp/>PID_ROLL_KD,<sp/>SIM_TIME);<sp/></highlight><highlight class="comment">//<sp/>dt<sp/>=<sp/>const?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>pidInit(&amp;my_PID_pitch,<sp/>0,<sp/>PID_ROLL_KP,<sp/>PID_ROLL_KI,<sp/>PID_ROLL_KD,<sp/>SIM_TIME);<sp/></highlight><highlight class="comment">//<sp/>dt<sp/>=<sp/>const?<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//pidInit(&amp;my_PID_yaw,<sp/>0,<sp/>PID_YAW_KP,<sp/>PID_YAW_KI,<sp/>PID_YAW_KD,<sp/>SIM_TIME);<sp/>//<sp/>dt<sp/>=<sp/>const?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSIL_1a6a7c1fe2a8b2e251c392569129fc06ea" kindref="member">SIL::update</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/><ref refid="classSensors" kindref="compound" tooltip="Container Class for sensor data (IMU, MAG, GPS)">Sensors</ref><sp/>mySensors)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dies<sp/>entspricht<sp/>der<sp/>Hauptschleife,<sp/>hier<sp/>müssen<sp/>die<sp/>zu<sp/>testenden<sp/>C-Funktionen<sp/>eingesetzt<sp/>werden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ab<sp/>hier<sp/>C-Funktionen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>der<sp/>main<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Stimuli<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSIL_1a9c92d49ff4644b8bb71f69cc55961a8a" kindref="member" tooltip="Instance of Joystick class to obtain data of playstion 3 controller.">_ps3controller</ref>.<ref refid="classJoystick_1a466b80d028a829cb4aa24ae60602c646" kindref="member" tooltip="Returns true if the joystick was found and may be used, otherwise false.">isFound</ref>())</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>stimulus<sp/>from<sp/>PS3-Controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSIL_1ab1f50cad8ee00ead398a145974827b29" kindref="member" tooltip="Obtains the current state of the playstation 3 controller.">get_ps3controller</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>joystick<sp/>detected,<sp/>thus<sp/>custom<sp/>stimulus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSIL_1ad2aea8d97e12b77f5438d40b91514336" kindref="member" tooltip="This function contains a sequence of test stimuli. It is intended to be called in update(double...">test_sequence</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;gas_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>gas_ctrl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;pitch_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>pitch_ctrl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;roll_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>roll_ctrl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;yaw_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>yaw_ctrl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>new<sp/>desired<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>pidSetDesired(&amp;my_PID_roll,<sp/>roll_ctrl);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>pidSetDesired(&amp;my_PID_pitch,<sp/>pitch_ctrl);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//pidSetDesired(&amp;my_PID_yaw,<sp/>yaw_ctrl);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>sensor<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>data<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>acc_x<sp/>=<sp/>mySensors.imu.acc_x;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>acc_y<sp/>=<sp/>mySensors.imu.acc_y;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>acc_z<sp/>=<sp/>mySensors.imu.acc_z;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>data<sp/>gyro<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>gyro_x<sp/>=<sp/>mySensors.imu.gyro_x;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>gyro_z<sp/>=<sp/>mySensors.imu.gyro_y;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>gyro_y<sp/>=<sp/>mySensors.imu.gyro_z;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>inertia<sp/>angles<sp/>by<sp/>filter<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>SYS_TIMING_MS<sp/>=<sp/>dT<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>MahonyAHRSupdateIMU((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)gyro_x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)gyro_y,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)gyro_z,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)acc_x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)acc_y,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)acc_z);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;acc_xyz:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>acc_x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>acc_y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>acc_z<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>Test<sp/>purposes<sp/>set<sp/>angle<sp/>vals<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>global_roll<sp/>=<sp/>mySensors.imu.roll_actual<sp/>*<sp/>180<sp/>/<sp/>M_PI;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>global_pitch<sp/>=<sp/>mySensors.imu.pitch_actual<sp/>*<sp/>180<sp/>/<sp/>M_PI;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//global_yaw<sp/>=<sp/>mySensors.imu.yaw_actual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>PID<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>y_roll<sp/>=<sp/>pidUpdate(&amp;my_PID_roll,<sp/>global_roll,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>y_pitch<sp/>=<sp/>pidUpdate(&amp;my_PID_pitch,<sp/>global_pitch,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//y_yaw<sp/>=<sp/>pidUpdate(&amp;my_PID_pitch,<sp/>global_yaw,<sp/>true);<sp/>//<sp/>not<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>y_yaw<sp/>=<sp/>yaw_ctrl;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mixer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="classSIL_1acf01cad2432f30fa1bf3566c11400119" kindref="member" tooltip="Current actuation value.">_actuation_value</ref>.motor[RIGHT]<sp/>=<sp/>gas_ctrl<sp/>+<sp/>y_yaw<sp/>-<sp/>y_roll;<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="classSIL_1acf01cad2432f30fa1bf3566c11400119" kindref="member" tooltip="Current actuation value.">_actuation_value</ref>.motor[LEFT]<sp/>=<sp/>gas_ctrl<sp/>+<sp/>y_yaw<sp/>+<sp/>y_roll;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="classSIL_1acf01cad2432f30fa1bf3566c11400119" kindref="member" tooltip="Current actuation value.">_actuation_value</ref>.motor[FRONT]<sp/>=<sp/>gas_ctrl<sp/>-<sp/>y_yaw<sp/>-<sp/>y_pitch;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="classSIL_1acf01cad2432f30fa1bf3566c11400119" kindref="member" tooltip="Current actuation value.">_actuation_value</ref>.motor[REAR]<sp/>=<sp/>gas_ctrl<sp/>-<sp/>y_yaw<sp/>+<sp/>y_pitch;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;gas_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>gas_ctrl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;pitch_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>pitch_ctrl<sp/>&lt;&lt;<sp/>std::endl;<sp/>//&lt;&lt;<sp/>&quot;front:<sp/>&quot;<sp/>&lt;&lt;<sp/>_actuation_value.motor[FRONT]<sp/>&lt;&lt;<sp/>&quot;rear:<sp/>&quot;<sp/>&lt;&lt;<sp/>_actuation_value.motor[REAR]<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;error<sp/>pitch:<sp/>&quot;<sp/>&lt;&lt;<sp/>my_PID_pitch.error<sp/>&lt;&lt;<sp/>&quot;error<sp/>roll:<sp/>&quot;<sp/>&lt;&lt;<sp/>my_PID_roll.error<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;roll_ctrl:<sp/>&quot;<sp/>&lt;&lt;<sp/>roll_ctrl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>hier<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;gx,<sp/>gy,<sp/>gz,<sp/>ax,<sp/>ay,<sp/>az&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>gyro_x<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>gyro_y<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>gyro_z<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>acc_x<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>acc_y<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>acc_z<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Pitch/Roll&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Filter:<sp/>&quot;<sp/>&lt;&lt;<sp/>global_pitch<sp/>&lt;&lt;<sp/>&quot;/&quot;<sp/>&lt;&lt;<sp/>global_roll<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Real:<sp/><sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>mySensors.imu.pitch_actual<sp/>&lt;&lt;<sp/>&quot;/&quot;<sp/>&lt;&lt;<sp/>mySensors.imu.yaw_actual<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Realposition<sp/>auf<sp/>Richtigkeit<sp/>verifizieren<sp/>und<sp/>Feststellen,<sp/>ob<sp/>Richtung<sp/>korrekt<sp/>ist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>test<sp/>=<sp/>-<sp/>(atan2(-acc_z,acc_y))<sp/>-<sp/>(3.14f/2.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//test<sp/>=<sp/><sp/>-<sp/>test<sp/>*<sp/>(180.0f/3.14f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;roll_raw:<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>test<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;roll:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>roll<sp/>&lt;&lt;<sp/>&quot;<sp/>pitch:<sp/>&quot;<sp/>&lt;&lt;<sp/>pitch<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get_joystick();<sp/>//TODO:<sp/>get_joystick<sp/>vernuenftig<sp/>einbinden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/usappz/DeadalusSim/source/sil/sil.cc"/>
  </compounddef>
</doxygen>
